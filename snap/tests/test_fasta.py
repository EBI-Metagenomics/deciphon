from pathlib import Path

from deciphon_snap.prod import MatchElemName
from deciphon_snap.read_snap import read_snap

queries = """>2
ATGAGCGTTGAAAGAACGGTTAGTCCGAAGCTGGTTGTACGCGACCTGAATTTTTACTAC
GGGGCTGAGCGCGCCCTCAAGGATATCAACCTGACCATTCCGGAAAAAATGGTGACCGCC
TTTATCGGTCCCTCAGGCTGCGGCAAATCCACCATGCTGCGCACCTTCAATCGCATGTAT
CAACTCTATCCGAAGCAAAAAGCGACGGGTGAAGTTCTGCTGGATGGGGAAAATATTCTC
GACAAAAAGCAGGATCTCAATACACTTCGGGCCAAGATCGGTATGGTATTCCAAAAACCG
ACTCCGTTCCCCATGTCTATTTATGACAACATTGCTTTCGGTGCGAAACTCTATGAAAAC
CTTAGCCGCCACGATATGGACGAACGGGTGGAATGGGCATTGAGGAAAGCAGCGCTATGG
ACGGAGGCGAAAGATAAACTGAAACAGAGCGGCACCGGACTTTCCGGTGGTCAGCAACAG
CGCTTGTGTATCGCGCGCGCCATCGCGGTCAAACCGCAAATCTTGTTACTCGACGAACCG
ACTTCTGCGCTCGACCCGATTTCCACCGCACATATCGAAAAGCTGATCGATGAGCTGAAA
GCAGAGTTCACCATTATCATCGTCACCCACAATATGCAGCAGGCAGCGCGCGTATCAGAC
TACACCGCCTATATGTATCTGGGTGACCTGATCGAATTCGGCGATACCAGAACGGTGTTC
ACTAATCCTAAGCGCAAGGAAACGGAAGATTACATTACCGGGCGGTTCGGGTAA
>17
GTGCGAATACCTCTTATCAGCCTAACTAACATCGGCAAGAATTATCCCAGCGTAGCCACT
GGTGGGAACCGGTTGCGCACGATTGCTGCCTTGCTGTTCAAGCGTGGTGAGGTGCCCCAT
TTCTGTGCACTACAGGGGGTCAACCTGGAACTGAAAGCAGGCGAGTCGCTTGGACTGATT
GGCGAAAATGGTGCTGGTAAATCCACGCTGTTGAAAATCATTGCCGGGGTGGTCAAGCCC
TCCACTGGCCAAGTGGTGGTTAATGGACGTATCGGTGCTTTGCTGGAACTGGGCAGCGGG
TTCCACCCCGAATATAACGGCTTGGAAAACATCCATCTGGCGGCCGCGCTGATGGGTATG
AGCAACGCAGAAATCGACAGCAAACTGGATTCCATAATTGAATTCGCCGATATTGGTTCC
CATATTGCGGAACCGATCAAGCATTACTCGTCGGGCATGGTGGTGCGGCTGGGTTTTGCC
GTAGCAACCGCCATGCAACCGGATATTTTGATTACTGACGAAGTGCTGGCTGTGGGCGAT
GAGTCGTTTCAGAAAAAGTGCATTCGCTGGATCGAAGGTTATTTGAGTCAAGGCGGGACA
TTACTGTTGTGCTCGCACAGTATGTTCCATATTCAGACGCTGTGTCAGAAGGCAGTATGG
ATTCATGATGGGCAGTTGCATATGTACGGCGACAGTTTTGACGTTACGCGTGAATACCTG
ACCTACCACGAAGAAAAGAATAGCAAAGCGGCGCATTTGGAACGTGTGGTACAGCCAAGT
GGAATATACACAATTCGCAAATTTTGGTTGGAGAATGATGTGGGTGTGGTAACTACGGTG
GCTGAGATGGATGGCGTATTGCGTATTTGTGGTGTGGCACATTCTCCCGATGATCGGCCG
CCAGTGATTCTGTTTGGTATCGTTCGAGTCGATGGAACGCCAGTTTACGGTACTCATTCA
AACGAAACAGCGTACCTTCCAAATAAAATTGCGCCCTCGCAATATGGTTTTTGTATTCGT
CTTTCTAATCTTCAGTTATTGCCAGGAAAATATACCATTCGCGCTCATGCAATGGATCCT
GAAGGATTGCGACTCTTTGATACCGTGACTACTTCGGTGCGAATCACCGGGCAGACCCGC
GATTATGGCTTATGCCGTTTAGAACATGAGTGGATGCCCGCAAGAGAGGATTTTATTGCC
ATGGAGGATAATTAA
"""

states = """>2
SNNNNNNNNNNNNNNNNNNNNNNNNNBM1M2M3M4M5M6M7M8M9M10M11M12M13M14
M15M16M17M18M19M20M21M22M23M24M25M26M27M28M29M30M31M32M33M34
M35M36M37I37I37I37I37I37M38M39M40M41M42M43M44M45M46M47M48M49
M50M51I51I51M52M53M54M55M56M57M58M59M60M61M62M63M64M65M66M67
M68M69M70M71M72M73M74D75M76M77M78M79I79I79I79I79I79I79I79I79
I79I79I79I79I79I79M80M81M82M83M84M85M86M87M88M89M90M91M92M93
M94M95M96M97M98M99M100M101M102M103M104M105M106M107M108M109M1
10M111M112M113M114M115M116M117M118M119M120M121M122M123M124M1
25M126M127M128M129M130M131M132M133M134M135M136M137ECCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCT
>17
SNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNBM1M2M3M4M5M6M7M
8M9M10M11M12M13M14M15M16M17M18M19M20M21M22M23M24M25M26M27M28
M29M30M31M32M33M34M35M36M37M38M39M40M41M42M43M44M45M46M47EJJ
JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJBM107M
108M109M110M111M112M113M114M115M116M117M118M119M120M121M122M
123M124M125M126M127M128M129M130M131M132M133M134ECCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCT
"""

codons = """>2
ATGAGCGTTGAAAGAACGGTTAGTCCGAAGCTGGTTGTACGCGACCTGAATTTTTACTAC
GGGGCTGAGCGCGCCCTCAAGGATATCAACCTGACCATTCCGGAAAAAATGGTGACCGCC
TTTATCGGTCCCTCAGGCTGCGGCAAATCCACCATGCTGCGCACCTTCAATCGCATGTAT
CAACTCTATCCGAAGCAAAAAGCGACGGGTGAAGTTCTGCTGGATGGGGAAAATATTCTC
GACAAAAAGCAGGATCTCAATACACTTCGGGCCAAGATCGGTATGGTATTCCAAAAACCG
ACTCCGTTCCCCATGTCTATTTATGACAACATTGCTTTCGGTGCGAAACTCTATGAAAAC
CTTAGCCGCCACGATATGGACGAACGGGTGGAATGGGCATTGAGGAAAGCAGCGCTATGG
ACGGAGGCGAAAGATAAACTGAAACAGAGCGGCACCGGACTTTCCGGTGGTCAGCAACAG
CGCTTGTGTATCGCGCGCGCCATCGCGGTCAAACCGCAAATCTTGTTACTCGACGAACCG
ACTTCTGCGCTCGACCCGATTTCCACCGCACATATCGAAAAGCTGATCGATGAGCTGAAA
GCAGAGTTCACCATTATCATCGTCACCCACAATATGCAGCAGGCAGCGCGCGTATCAGAC
TACACCGCCTATATGTATCTGGGTGACCTGATCGAATTCGGCGATACCAGAACGGTGTTC
ACTAATCCTAAGCGCAAGGAAACGGAAGATTACATTACCGGCGGTTCGGGTAAA
>17
GTGCGAATACCTCTTATCAGCCTAACTAACATCGGCAAGAATTATCCCAGCGTAGCCACT
GGTGGGAACCGGTTGCGCACGATTGCTGCCTTGCTGTTCAAGCGTGGTGAGGTGCCCCAT
TTCTGTGCACTACAGGGGGTCAACCTGGAACTGAAAGCAGGCGAGTCGCTTGGACTGATT
GGCGAAAATGGTGCTGGTAAATCCACGCTGTTGAAAATCATTGCCGGGGTGGTCAAGCCC
TCCACTGGCCAAGTGGTGGTTAATGGACGTATCGGTGCTTTGCTGGAACTGGGCAGCGGG
TTCCACCCCGAATATAACGGCTTGGAAAACATCCATCTGGCGGCCGCGCTGATGGGTATG
AGCAACGCAGAAATCGACAGCAAACTGGATTCCATAATTGAATTCGCCGATATTGGTTCC
CATATTGCGGAACCGATCAAGCATTACTCGTCGGGCATGGTGGTGCGGCTGGGTTTTGCC
GTAGCAACCGCCATGCAACCGGATATTTTGATTACTGACGAAGTGCTGGCTGTGGGCGAT
GAGTCGTTTCAGAAAAAGTGCATTCGCTGGATCGAAGGTTATTTGAGTCAAGGCGGGACA
TTACTGTTGTGCTCGCACAGTATGTTCCATATTCAGACGCTGTGTCAGAAGGCAGTATGG
ATTCATGATGGGCAGTTGCATATGTACGGCGACAGTTTTGACGTTACGCGTGAATACCTG
ACCTACCACGAAGAAAAGAATAGCAAAGCGGCGCATTTGGAACGTGTGGTACAGCCAAGT
GGAATATACACAATTCGCAAATTTTGGTTGGAGAATGATGTGGGTGTGGTAACTACGGTG
GCTGAGATGGATGGCGTATTGCGTATTTGTGGTGTGGCACATTCTCCCGATGATCGGCCG
CCAGTGATTCTGTTTGGTATCGTTCGAGTCGATGGAACGCCAGTTTACGGTACTCATTCA
AACGAAACAGCGTACCTTCCAAATAAAATTGCGCCCTCGCAATATGGTTTTTGTATTCGT
CTTTCTAATCTTCAGTTATTGCCAGGAAAATATACCATTCGCGCTCATGCAATGGATCCT
GAAGGATTGCGACTCTTTGATACCGTGACTACTTCGGTGCGAATCACCGGGCAGACCCGC
GATTATGGCTTATGCCGTTTAGAACATGAGTGGATGCCCGCAAGAGAGGATTTTATTGCC
ATGGAGGATATTAAA
"""

aminos = """>2
MSVERTVSPKLVVRDLNFYYGAERALKDINLTIPEKMVTAFIGPSGCGKSTMLRTFNRMY
QLYPKQKATGEVLLDGENILDKKQDLNTLRAKIGMVFQKPTPFPMSIYDNIAFGAKLYEN
LSRHDMDERVEWALRKAALWTEAKDKLKQSGTGLSGGQQQRLCIARAIAVKPQILLLDEP
TSALDPISTAHIEKLIDELKAEFTIIIVTHNMQQAARVSDYTAYMYLGDLIEFGDTRTVF
TNPKRKETEDYITGGSGK
>17
VRIPLISLTNIGKNYPSVATGGNRLRTIAALLFKRGEVPHFCALQGVNLELKAGESLGLI
GENGAGKSTLLKIIAGVVKPSTGQVVVNGRIGALLELGSGFHPEYNGLENIHLAAALMGM
SNAEIDSKLDSIIEFADIGSHIAEPIKHYSSGMVVRLGFAVATAMQPDILITDEVLAVGD
ESFQKKCIRWIEGYLSQGGTLLLCSHSMFHIQTLCQKAVWIHDGQLHMYGDSFDVTREYL
TYHEEKNSKAAHLERVVQPSGIYTIRKFWLENDVGVVTTVAEMDGVLRICGVAHSPDDRP
PVILFGIVRVDGTPVYGTHSNETAYLPNKIAPSQYGFCIRLSNLQLLPGKYTIRAHAMDP
EGLRLFDTVTTSVRITGQTRDYGLCRLEHEWMPAREDFIAMEDIK
"""


def test_fasta(files_path: Path):
    snap_file = read_snap(files_path / "example.dcs")
    prods = snap_file.products[:2]
    assert queries == prods.fasta_list(MatchElemName.QUERY).format(ncols=60)
    assert states == prods.fasta_list(MatchElemName.STATE).format(ncols=60)
    assert codons == prods.fasta_list(MatchElemName.CODON).format(ncols=60)
    assert aminos == prods.fasta_list(MatchElemName.AMINO).format(ncols=60)


def test_empty_fasta(files_path: Path):
    snap_file = read_snap(files_path / "example.dcs")
    prods = snap_file.products[0:0]
    assert "" == prods.fasta_list(MatchElemName.QUERY).format(ncols=60)
