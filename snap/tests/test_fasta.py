from pathlib import Path

from deciphon_snap.prod import MatchElemName
from deciphon_snap.read_snap import read_snap

queries = """>0
ATGCGAGACAACACATTATGGAATTCCTGTCTTCTTTTTTTTGAAGGTACGCTTACCTCA
CAACAATTTAATTCCTGGATTAAACCTCTGACTTTTGAAATTCACGGTAATAAAATTACC
TTGACTGCACCTAACAGTTTTACGTTAAAACTTGTGCAGGGACGATTTTTACCAGAAATT
TCCAAGCGAGCAGAATTATTTCTTTCATGCCCGCCAAGTTTCGAGTTACGCATAGGAGAA
AGACCTCTCAATTTGCTTCCCTCAACATTACCAGTTGCTATAACTAATATTATCCCACCT
ATATCCCAACCCACACTTAATAAACACAAAAATCAAAATAAACTTAATCCTTTGTTATCT
TTTGAAAACTTTGTTACTGGTAAAGCAAATCAATTGGCTCATGCAGCAGCAATACAAGTT
GCTGAAACTCCCGGCACAACGTATAACCCATTATTTATTTACGGTGGGGTTGGATTAGGA
AAAACTCATTTAATTCAGGCTATTGGAAATCATATAAAACTTGAAAATGCACAGGCAAAA
ATTTGCTATGTTCATGCTACAAATTATATTTCAGATGTTGTCCGCGCCTTTCAAACTAAA
AAATTTGATGAATTTAAACAGTTTTACAACTCCTTAGATTTGCTATTAATTGATGATATT
CAATTCATCGCGGATAAAACTGGAACCCAACAAGAATTTTTCTATACTCTTAATTCATTA
ATTGATGGACATAAACAAGTTGTAATCACTTGCGATACCTTTCCCAAAGAAATTTCTGGA
ATGACGCCCCGACTTACTTCTCGGTTCAGCTGGGGATTAACAGTCGCAGTTGAACCACCT
GGTTTGGAAATGCGAGTAGCAATTTTGCTACAGAAAGCTGCTATTTCTAACAATCCGATA
AGTGAAGATGTTGCTTTTTTTATTGCCAAACACATTCGTTCAAATATCCGTGAATTAGAA
GGTGCACTTAAACGTATAGATGCTTATTCCAAATTTCACAAACGCATCATCTCTGTAGAA
CTTGCAAAAGAAGCTCTTAAAGATTTGCTTGCTTCTCAAAATAAGCAAATTTCCATAGAA
AATATTCAAAAAACTGTAGCTGATTTTTACCGCATCAAGGTTGCTGATCTTCTTTCCAAG
AAGCGTACGCGCTTAATTGCCAGACCTAGACAAATTGCGATGTGCTTAGCAAGGGAATTA
ACACAATTAAGCTTACCTGAAATTGGAGCTGCTTTTGGAGGACGTGATCATACAACGGTT
ATGTATGCATGTAAGACCATCGAAAGCTTACGCAATTTGAATTCCCCTCTTAATGCAGAT
TTCAATTTACTTAATCAAACATTAAGAAACTAA
>0
ATGCGAGACAACACATTATGGAATTCCTGTCTTCTTTTTTTTGAAGGTACGCTTACCTCA
CAACAATTTAATTCCTGGATTAAACCTCTGACTTTTGAAATTCACGGTAATAAAATTACC
TTGACTGCACCTAACAGTTTTACGTTAAAACTTGTGCAGGGACGATTTTTACCAGAAATT
TCCAAGCGAGCAGAATTATTTCTTTCATGCCCGCCAAGTTTCGAGTTACGCATAGGAGAA
AGACCTCTCAATTTGCTTCCCTCAACATTACCAGTTGCTATAACTAATATTATCCCACCT
ATATCCCAACCCACACTTAATAAACACAAAAATCAAAATAAACTTAATCCTTTGTTATCT
TTTGAAAACTTTGTTACTGGTAAAGCAAATCAATTGGCTCATGCAGCAGCAATACAAGTT
GCTGAAACTCCCGGCACAACGTATAACCCATTATTTATTTACGGTGGGGTTGGATTAGGA
AAAACTCATTTAATTCAGGCTATTGGAAATCATATAAAACTTGAAAATGCACAGGCAAAA
ATTTGCTATGTTCATGCTACAAATTATATTTCAGATGTTGTCCGCGCCTTTCAAACTAAA
AAATTTGATGAATTTAAACAGTTTTACAACTCCTTAGATTTGCTATTAATTGATGATATT
CAATTCATCGCGGATAAAACTGGAACCCAACAAGAATTTTTCTATACTCTTAATTCATTA
ATTGATGGACATAAACAAGTTGTAATCACTTGCGATACCTTTCCCAAAGAAATTTCTGGA
ATGACGCCCCGACTTACTTCTCGGTTCAGCTGGGGATTAACAGTCGCAGTTGAACCACCT
GGTTTGGAAATGCGAGTAGCAATTTTGCTACAGAAAGCTGCTATTTCTAACAATCCGATA
AGTGAAGATGTTGCTTTTTTTATTGCCAAACACATTCGTTCAAATATCCGTGAATTAGAA
GGTGCACTTAAACGTATAGATGCTTATTCCAAATTTCACAAACGCATCATCTCTGTAGAA
CTTGCAAAAGAAGCTCTTAAAGATTTGCTTGCTTCTCAAAATAAGCAAATTTCCATAGAA
AATATTCAAAAAACTGTAGCTGATTTTTACCGCATCAAGGTTGCTGATCTTCTTTCCAAG
AAGCGTACGCGCTTAATTGCCAGACCTAGACAAATTGCGATGTGCTTAGCAAGGGAATTA
ACACAATTAAGCTTACCTGAAATTGGAGCTGCTTTTGGAGGACGTGATCATACAACGGTT
ATGTATGCATGTAAGACCATCGAAAGCTTACGCAATTTGAATTCCCCTCTTAATGCAGAT
TTCAATTTACTTAATCAAACATTAAGAAACTAA
"""

states = """>0
SNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNBM2M3M4M5M6M7M8M9M10M11M12M1
3M14M15M16M17M18M19M20M21M22M23I23I23I23I23I23M24M25M26M27M2
8M29M30M31M32M33M34M35M36M37M38M39M40M41M42M43M44M45M46M47M4
8M49M50M51M52M53M54M55M56M57D58D59M60M61M62M63M64M65M66M67M6
8M69M70M71M72M73M74D75D76D77D78D79M80M81M82M83M84M85M86M87M8
8M89M90M91M92M93M94M95M96M97M98ECCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCT
>0
SNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNBM64M65M66M67M68M69M70M71M72M
73M74M75M76M77M78M79M80M81M82M83M84M85M86M87M88M89M90M91M92M
93M94M95M96M97M98M99M100M101M102M103M104M105M106M107M108M109
M110M111M112M113M114M115M116ECCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCT
"""

codons = """>0
ATGCGAGACAACACATTATGGAATTCCTGTCTTCTTTTTTTTGAAGGTACGCTTACCTCA
CAACAATTTAATTCCTGGATTAAACCTCTGACTTTTGAAATTCACGGTAATAAAATTACC
TTGACTGCACCTAACAGTTTTACGTTAAAACTTGTGCAGGGACGATTTTTACCAGAAATT
TCCAAGCGAGCAGAATTATTTCTTTCATGCCCGCCAAGTTTCGAGTTACGCATAGGAGAA
AGACCTCTCAATTTGCTTCCCTCAACATTACCAGTTGCTATAACTAATATTATCCCACCT
ATATCCCAACCCACACTTAATAAACACAAAAATCAAAATAAACTTAATCCTTTGTTATCT
TTTGAAAACTTTGTTACTGGTAAAGCAAATCAATTGGCTCATGCAGCAGCAATACAAGTT
GCTGAAACTCCCGGCACAACGTATAACCCATTATTTATTTACGGTGGGGTTGGATTAGGA
AAAACTCATTTAATTCAGGCTATTGGAAATCATATAAAACTTGAAAATGCACAGGCAAAA
ATTTGCTATGTTCATGCTACAAATTATATTTCAGATGTTGTCCGCGCCTTTCAAACTAAA
AAATTTGATGAATTTAAACAGTTTTACAACTCCTTAGATTTGCTATTAATTGATGATATT
CAATTCATCGCGGATAAAACTGGAACCCAACAAGAATTTTTCTATACTCTTAATTCATTA
ATTGATGGACATAAACAAGTTGTAATCACTTGCGATACCTTTCCCAAAGAAATTTCTGGA
ATGACGCCCCGACTTACTTCTCGGTTCAGCTGGGGATTAACAGTCGCAGTTGAACCACCT
GGTTTGGAAATGCGAGTAGCAATTTTGCTACAGAAAGCTGCTATTTCTAACAATCCGATA
AGTGAAGATGTTGCTTTTTTTATTGCCAAACACATTCGTTCAAATATCCGTGAATTAGAA
GGTGCACTTAAACGTATAGATGCTTATTCCAAATTTCACAAACGCATCATCTCTGTAGAA
CTTGCAAAAGAAGCTCTTAAAGATTTGCTTGCTTCTCAAAATAAGCAAATTTCCATAGAA
AATATTCAAAAAACTGTAGCTGATTTTTACCGCATCAAGGTTGCTGATCTTCTTTCCAAG
AAGCGTACGCGCTTAATTGCCAGACCTAGACAAATTGCGATGTGCTTAGCAAGGGAATTA
ACACAATTAAGCTTACCTGAAATTGGAGCTGCTTTTGGAGGACGTGATCATACAACGGTT
ATGTATGCATGTAAGACCATCGAAAGCTTACGCAATTTGAATTCCCCTCTTAATGCAGAT
TTCAATTTACTTAATCAAAACATTAAGAAACTA
>0
ATGCGAGACAACACATTATGGAATTCCTGTCTTCTTTTTTTTGAAGGTACGCTTACCTCA
CAACAATTTAATTCCTGGATTAAACCTCTGACTTTTGAAATTCACGGTAATAAAATTACC
TTGACTGCACCTAACAGTTTTACGTTAAAACTTGTGCAGGGACGATTTTTACCAGAAATT
TCCAAGCGAGCAGAATTATTTCTTTCATGCCCGCCAAGTTTCGAGTTACGCATAGGAGAA
AGACCTCTCAATTTGCTTCCCTCAACATTACCAGTTGCTATAACTAATATTATCCCACCT
ATATCCCAACCCACACTTAATAAACACAAAAATCAAAATAAACTTAATCCTTTGTTATCT
TTTGAAAACTTTGTTACTGGTAAAGCAAATCAATTGGCTCATGCAGCAGCAATACAAGTT
GCTGAAACTCCCGGCACAACGTATAACCCATTATTTATTTACGGTGGGGTTGGATTAGGA
AAAACTCATTTAATTCAGGGCTATTGGAAATCATATAAAACTTGGAAAATGCACAGGCAA
AAATTTGCTATGTTCATGCTACAAATTATATTTCAGATGTTTGTCCGCGCCTTTCAAACT
AAAAAATTTGATGAATTTAAACAGTTTTACAACTCCTTAGATTTGCTATTAATTGATGAT
ATTCAATTCATCGCGGATAAAACTGGAACCCAACAAGAATTTTTCTATACTCTTAATTCA
TTAATTGATGGACATAAACAAGTTGTAATCACTTGCGATACCTTTCCCAAAGAAATTTCT
GGAATGACGCCCCGACTTACTTCTCGGTTCAGCTGGGGATTAACAGTCGCAGTTGAACCA
CCTGGTTTGGAAATGCGAGTAGCAATTTTGCTACAGAAAGCTGCTATTTCTAACAATCCG
ATAAGTGAAGATGTTGCTTTTTTTATTGCCAAACACATTCGTTCAAATATCCGTGAATTA
GAAGGTGCACTTAAACGTATAGATGCTTATTCCAAATTTCACAAACGCATCATCTCTGTA
GAACTTGCAAAAGAAGCTCTTAAAGATTTGCTTGCTTCTCAAAATAAGCAAATTTCCATA
GAAAATATTCAAAAAACTGTAGCTGATTTTTACCGCATCAAGGTTGCTGATCTTCTTTCC
AAGAAGCGTACGCGCTTAATTGCCAGACCTAGACAAATTGCGATGTGCTTAGCAAGGGAA
TTAACACAATTAAGCTTACCTGAAATTGGAGCTGCTTTTGGAGGACGTGATCATACAACG
GTTATGTATGCATGTAAGACCATCGAAAGCTTACGCAATTTGAATTCCCCTCTTAATGCA
GATTTCAATTTACTTAATCAAAACATTAAGAAACTA
"""

aminos = """>0
MRDNTLWNSCLLFFEGTLTSQQFNSWIKPLTFEIHGNKITLTAPNSFTLKLVQGRFLPEI
SKRAELFLSCPPSFELRIGERPLNLLPSTLPVAITNIIPPISQPTLNKHKNQNKLNPLLS
FENFVTGKANQLAHAAAIQVAETPGTTYNPLFIYGGVGLGKTHLIQAIGNHIKLENAQAK
ICYVHATNYISDVVRAFQTKKFDEFKQFYNSLDLLLIDDIQFIADKTGTQQEFFYTLNSL
IDGHKQVVITCDTFPKEISGMTPRLTSRFSWGLTVAVEPPGLEMRVAILLQKAAISNNPI
SEDVAFFIAKHIRSNIRELEGALKRIDAYSKFHKRIISVELAKEALKDLLASQNKQISIE
NIQKTVADFYRIKVADLLSKKRTRLIARPRQIAMCLARELTQLSLPEIGAAFGGRDHTTV
MYACKTIESLRNLNSPLNADFNLLNQNIKKL
>0
MRDNTLWNSCLLFFEGTLTSQQFNSWIKPLTFEIHGNKITLTAPNSFTLKLVQGRFLPEI
SKRAELFLSCPPSFELRIGERPLNLLPSTLPVAITNIIPPISQPTLNKHKNQNKLNPLLS
FENFVTGKANQLAHAAAIQVAETPGTTYNPLFIYGGVGLGKTHLIQGYWKSYKTWKMHRQ
KFAMFMLQIIFQMFVRAFQTKKFDEFKQFYNSLDLLLIDDIQFIADKTGTQQEFFYTLNS
LIDGHKQVVITCDTFPKEISGMTPRLTSRFSWGLTVAVEPPGLEMRVAILLQKAAISNNP
ISEDVAFFIAKHIRSNIRELEGALKRIDAYSKFHKRIISVELAKEALKDLLASQNKQISI
ENIQKTVADFYRIKVADLLSKKRTRLIARPRQIAMCLARELTQLSLPEIGAAFGGRDHTT
VMYACKTIESLRNLNSPLNADFNLLNQNIKKL
"""


def test_fasta(files_path: Path):
    snap_file = read_snap(files_path / "example.dcs")
    prods = snap_file.products[:2]
    assert queries == prods.fasta_list(MatchElemName.QUERY).format(ncols=60)
    assert states == prods.fasta_list(MatchElemName.STATE).format(ncols=60)
    assert codons == prods.fasta_list(MatchElemName.CODON).format(ncols=60)
    assert aminos == prods.fasta_list(MatchElemName.AMINO).format(ncols=60)


def test_empty_fasta(files_path: Path):
    snap_file = read_snap(files_path / "example.dcs")
    prods = snap_file.products[0:0]
    assert "" == prods.fasta_list(MatchElemName.QUERY).format(ncols=60)
