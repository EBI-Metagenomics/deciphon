name: ðŸ“¦ Python-core release

on:
  push:
    tags:
      - python-core-v*

defaults:
  run:
    working-directory: python-core

env:
  CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9,<3.14"

jobs:
  make_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: python-core/dist/*.tar.gz

  make_linux_intel_cp_wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup architecture
        run: |
          echo "CIBW_ARCHS_LINUX=x86_64" >> "$GITHUB_ENV"
          echo "CIBW_BUILD=cp*" >> "$GITHUB_ENV"

      - name: Build wheels
        run: pipx run cibuildwheel==2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-linux_intel_cp_wheels
          path: python-core/wheelhouse/*.whl

  make_linux_arm_cp_wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup architecture
        run: |
          echo "CIBW_ARCHS_LINUX=aarch64" >> "$GITHUB_ENV"
          echo "CIBW_BUILD=cp*" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        run: pipx run cibuildwheel==2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-linux_arm_cp_wheels
          path: python-core/wheelhouse/*.whl

  make_linux_intel_pp_wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup architecture
        run: |
          echo "CIBW_ARCHS_LINUX=x86_64" >> "$GITHUB_ENV"
          echo "CIBW_BUILD=pp*" >> "$GITHUB_ENV"

      - name: Build wheels
        run: pipx run cibuildwheel==2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-linux_intel_pp_wheels
          path: python-core/wheelhouse/*.whl

  make_linux_arm_pp_wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup architecture
        run: |
          echo "CIBW_ARCHS_LINUX=aarch64" >> "$GITHUB_ENV"
          echo "CIBW_BUILD=pp*" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        run: pipx run cibuildwheel==2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-linux_arm_pp_wheels
          path: python-core/wheelhouse/*.whl

  make_macos_intel_wheels:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3

      - name: Setup OpenMP
        run: |
          brew install libomp
          echo "C_INCLUDE_PATH=$(brew --prefix)/opt/libomp/include" >> $GITHUB_ENV
          echo "LIBRARY_PATH=$(brew --prefix)/opt/libomp/lib"       >> $GITHUB_ENV

      - name: Set macOS deployment target
        run: echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion | cut -d '.' -f 1-2)" >> $GITHUB_ENV

      - name: Build wheels
        run: pipx run cibuildwheel==2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-macos_intel_wheels
          path: python-core/wheelhouse/*.whl

  make_macos_arm_wheels:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v3

      - name: Install autoconf
        run: brew install autoconf

      - name: Setup OpenMP
        run: |
          brew install libomp
          echo "C_INCLUDE_PATH=$(brew --prefix)/opt/libomp/include" >> $GITHUB_ENV
          echo "LIBRARY_PATH=$(brew --prefix)/opt/libomp/lib"       >> $GITHUB_ENV

      - name: Set macOS deployment target
        run: echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion | cut -d '.' -f 1-2)" >> $GITHUB_ENV

      - name: Build wheels
        run: pipx run cibuildwheel==2.22.0

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-macos_arm_wheels
          path: python-core/wheelhouse/*.whl

  upload_all:
    needs: [make_linux_intel_cp_wheels, make_linux_arm_cp_wheels, make_linux_intel_pp_wheels, make_linux_arm_pp_wheels, make_macos_intel_wheels, make_macos_arm_wheels, make_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: artifact-*
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
